#!/bin/env python

from os import *
import sys
import shutil

import utp
import utp.BlockStore
import utp.FileSystem
import utp.PyDirEntryFunc

class DirEntryPrinter(utp.PyDirEntryFunc.PyDirEntryFunc):
    def __init__(self):
        utp.PyDirEntryFunc.PyDirEntryFunc.__init__(self)

    def def_entry(self, name, statbuf, offset):
        print "def_entry", name, statbuf, offset

try:
    bspath = "test2.bs"

    # Remove any prexisting blockstore.
    shutil.rmtree(bspath, True)  

    # Get the FileSystem singleton.
    fs = utp.FileSystem.instance()

    # Make a new filesystem.
    fs.fs_mkfs(bspath, "", "");

    # Stat something.
    print fs.fs_getattr("/.utopfs");

    # See if readdir works
    decb = DirEntryPrinter()
    fs.fs_readdir("/.utopfs", 0, decb)

    # Create a file
    fs.fs_mknod("/foo", 0666, 0)

    # Stat the file
    st = fs.fs_getattr("/foo")
    print st.st_mtime 

    # Unmount the filesystem.
    fs.fs_unmount()

    # Mount the existing filesystem.
    fs.fs_mount(bspath, "", "")

    # Stat the file
    print fs.fs_getattr("/foo")

    # Don't Clean up.
    # shutil.rmtree(bspath, True)  

except utp.Error, ex:
    print ex[0]['what']

except:
    print "Unexpected error:", sys.exc_info()[0]
    raise
